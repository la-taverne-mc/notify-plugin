package com.nisovin.shopkeepers.api.events;

import org.bukkit.entity.Player;
import org.bukkit.event.Cancellable;
import org.bukkit.event.HandlerList;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.ItemStack;

import com.nisovin.shopkeepers.api.shopkeeper.Shopkeeper;
import com.nisovin.shopkeepers.api.shopkeeper.TradingRecipe;


public class ShopkeeperTradeEvent extends ShopkeeperEvent implements Cancellable {

	private final Player player;
	private final InventoryClickEvent clickEvent;
	private final TradingRecipe tradingRecipe;
	private final ItemStack offeredItem1;
	private final ItemStack offeredItem2;
	private final boolean swappedItemOrder;
	private boolean cancelled = false;


	public ShopkeeperTradeEvent(Shopkeeper shopkeeper, Player player, InventoryClickEvent clickEvent,
								TradingRecipe tradingRecipe, ItemStack offeredItem1, ItemStack offeredItem2,
								boolean swappedItemOrder) {
		super(shopkeeper);
		this.player = player;
		this.clickEvent = clickEvent;
		this.tradingRecipe = tradingRecipe;
		this.offeredItem1 = offeredItem1;
		this.offeredItem2 = offeredItem2;
		this.swappedItemOrder = swappedItemOrder;
	}


	public Player getPlayer() {
		return player;
	}


	public InventoryClickEvent getClickEvent() {
		return clickEvent;
	}

	
	public TradingRecipe getTradingRecipe() {
		return tradingRecipe;
	}

	
	public ItemStack getOfferedItem1() {
		return offeredItem1.clone();
	}


	public ItemStack getOfferedItem2() {
		return (offeredItem2 == null) ? null : offeredItem2.clone();
	}


	public boolean isItemOrderSwapped() {
		return swappedItemOrder;
	}

	@Override
	public boolean isCancelled() {
		return cancelled;
	}
  
	@Override
	public void setCancelled(boolean cancelled) {
		this.cancelled = cancelled;
	}

	private static final HandlerList handlers = new HandlerList();

	@Override
	public HandlerList getHandlers() {
		return handlers;
	}

	public static HandlerList getHandlerList() {
		return handlers;
	}
}
